# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy App to Github Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a stable Node.js version, e.g., 18 or 20

      - name: Install dependencies
        run: npm install # Or yarn install if you use yarn

      - name: Build React App
        run: npm run build # This command generates your 'dist' folder
        env:
          # Optional: Set environment variables required for your build,
          # e.g., for CRA, you might need PUBLIC_URL if not configured in package.json
          PUBLIC_URL: /${{ github.event.repository.name }} # For React Router or static assets base path

      - name: Setup Pages
        uses: actions/configure-pages@v5

        with:
          source: ./dist
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist' # Upload the 'dist' directory as the artifact

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
